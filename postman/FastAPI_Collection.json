{
  "info": {
    "name": "ðŸ¤– CodementorX - FastAPI Chatbot Service",
    "_postman_id": "codementorx-fastapi-collection",
    "description": "Collection for testing FastAPI chatbot (port 8001) with Django Auth (port 8000)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth - Login",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"{{test_email}}\",\n    \"password\": \"{{test_password}}\"\n}"
        },
        "url": {
          "raw":  "{\n    \"email\": \"testuser1@example.com\",\n    \"password\": \"SecurePassword123!\"\n}",
          "host": ["{{auth_base_url}}"],
          "path": ["api", "auth", "login", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Login - Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "const jsonData = pm.response.json();",
              "pm.environment.set('access_token', jsonData.access);",
              "pm.environment.set('refresh_token', jsonData.refresh);",
              "pm.environment.set('user_id', jsonData.user.id);",
              "console.log('ðŸ”‘ Access token updated:', jsonData.access);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Chat - General Question",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"content\": \"Hello! What is CodementorX?\",\n    \"metadata\": { \"timestamp\": \"{{$isoTimestamp}}\", \"source\": \"postman_test\" }\n}"
        },
        "url": {
          "raw": "{{chat_base_url}}/api/chat/",
          "host": ["{{chat_base_url}}"],
          "path": ["api", "chat", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Chat General - Status 200', () => pm.response.to.have.status(200));",
              "const res = pm.response.json();",
              "pm.environment.set('conversation_id', res.conversation_id);",
              "pm.expect(res).to.have.property('reply');",
              "console.log('ðŸ’¬ Conversation started:', res.conversation_id);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Chat - Coding Question (FastAPI + JWT)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"content\": \"How do I implement JWT authentication in FastAPI?\",\n    \"conversation_id\": {{conversation_id}},\n    \"intent\": \"coding\",\n    \"metadata\": { \"language\": \"python\", \"framework\": \"fastapi\", \"timestamp\": \"{{$isoTimestamp}}\" }\n}"
        },
        "url": {
          "raw": "{{chat_base_url}}/api/chat/",
          "host": ["{{chat_base_url}}"],
          "path": ["api", "chat", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Chat Coding - Status 200', () => pm.response.to.have.status(200));",
              "const res = pm.response.json();",
              "pm.expect(res.intent).to.eql('coding');",
              "pm.expect(res.reply).to.include('FastAPI');",
              "pm.expect(res.reply).to.include('JWT');",
              "console.log('ðŸ’» Coding response OK');"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{chat_base_url}}/api/health",
          "host": ["{{chat_base_url}}"],
          "path": ["api", "health"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Health Check - Status 200', () => pm.response.to.have.status(200));",
              "const res = pm.response.json();",
              "pm.expect(res.status).to.eql('healthy');",
              "console.log('ðŸ©º Health check passed');"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Chat Service Status",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{chat_base_url}}/api/chat/status",
          "host": ["{{chat_base_url}}"],
          "path": ["api", "chat", "status"]
        }
      }
    }
  ]
}
